name: Action Bootstrap
branding:
  icon: arrow-right-circle
  color: gray-dark
description: |
  This action performs git repo checkout, configures AWS credentials, logs into ECR and generates the image name

inputs:
  ecr-repo-name:
    required: false
    description: the name of the docker image to configure
    default: ''
  aws-account-id:
    required: true
    description: 'aws-account-id to configure'
  role-to-assume:
    required: true
    description: 'role-to-assume to configure'
  role-session-name:
    required: true
    description: 'role-session-name to configure'
  aws-region:
    required: true
    description: 'aws-region to configure'
  checkout-depth:
    required: false
    description: 'The checkout depth. Set to 0 to have a full checkout'
    default: '1'
  load-secrets:
    required: false
    description: 'Load secrets from AWS secrets manager as environment variables'
    default: false
  secret-names:
    required: false
    description: 'The names of the secrets to pull values from'
    default: '[]' # Required format: '[",github-actions-group-prod", ",github-actions-uk-m-a-prod"]'

outputs:
  ecr-repo-name:
    description: 'The generated ECR repository name'
    value: '${{ steps.img-name.outputs.ecr-repo-name }}'
  app-version:
    description: 'The current project version'
    value: '${{ steps.meta.outputs.version }}'
  docker-labels:
    description: 'The labels of the docker image'
    value: '${{ steps.meta.outputs.labels }}'
  docker-tags:
    description: 'The tags of the docker image'
    value: '${{ steps.meta.outputs.tags }}'


runs:
  using: 'composite'
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      if: (!(github.event_name == 'pull_request' && (github.event.action == 'closed' || github.event.action == 'unlabeled')))
      with:
        persist-credentials: false
        fetch-depth: ${{ inputs.checkout-depth }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4.0.2
      with:
        role-to-assume: ${{ inputs.role-to-assume }}
        role-session-name: ${{ inputs.role-session-name }}
        aws-region: ${{ inputs.aws-region }}

    - name: Load AWS Secrets
      if: ${{ inputs.load-secrets }}
      uses: aws-actions/aws-secretsmanager-get-secrets@v2
      with:
        secret-ids: ${{ fromJSON(github.event.inputs.secret-names) }}
        parse-json-secrets: true

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Image Name
      id: img-name
      shell: bash
      run: |
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          echo "ecr-repo-name=${{inputs.aws-account-id}}.dkr.ecr.${{ inputs.aws-region }}.amazonaws.com/alpha-image/${{ inputs.ecr-repo-name }}" >>"${GITHUB_OUTPUT}" 
        else
          echo "ecr-repo-name=${{inputs.aws-account-id}}.dkr.ecr.${{ inputs.aws-region }}.amazonaws.com/image/${{ inputs.ecr-repo-name }}" >>"${GITHUB_OUTPUT}" 
        fi

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      if: (!(github.event_name == 'pull_request' && (github.event.action == 'closed' || github.event.action == 'unlabeled')))
      with:
        images: |
          ${{ steps.img-name.outputs.ecr-repo-name }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr,suffix=-{{sha}}
          type=semver,pattern={{version}},prefix=v
          type=semver,pattern={{major}}.{{minor}},prefix=v
          type=semver,pattern={{major}},prefix=v
